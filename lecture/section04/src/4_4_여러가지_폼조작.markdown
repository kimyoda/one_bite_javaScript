## 📝 4_4다양한 폼(Form) 조작 방법 정리

---

## 1. 폼 요소란?

- **폼(Form)**: 사용자와 상호작용하는 HTML 요소들의 집합
- 대표적인 폼 요소: `input`, `select`, `textarea`, `button`

---

## 2. 주요 폼 요소 선택 및 값 읽기/쓰기

```js
// id로 input 요소 선택
const $userName = document.getElementById('userName');
const $password = document.getElementById('password');

// value 속성: input, select, textarea 등 폼 요소의 현재 값을 읽거나 쓸 때 사용
$userName.value = "요다"; // 입력창에 기본값을 미리 넣기
let name = $userName.value; // 입력된 값을 읽어오기
```

---

## 3. 버튼 클릭 이벤트로 값 읽기

```js
const $loginBtn = document.querySelector('button');
$loginBtn.addEventListener('click', () => {
  // 버튼 클릭 시 input에 입력된 값 출력
  console.log($userName.value);
  console.log($password.value);
});
```

---

## 4. input, select, textarea의 실시간 값 감지

- `input` 이벤트: 값이 바뀔 때마다(한 글자씩 입력/삭제할 때마다) 실행
- `change` 이벤트: 값이 최종적으로 바뀌었을 때(포커스가 바뀌거나 엔터 등) 실행

```js
$password.addEventListener('input', (event) => {
  console.log(event.target.value); // 실시간으로 입력된 비밀번호 출력
});
```

---

## 5. select 요소의 옵션 삭제

```js
const $fruitSelect = document.getElementById('fruitSelect');
$fruitSelect.remove(1); // 두 번째 옵션(인덱스 1) 삭제
```

---

## 6. 주요 메서드/이벤트 정리

| 메서드/이벤트                | 설명                                                         |
|------------------------------|--------------------------------------------------------------|
| `getElementById('id')`       | id로 요소 선택 (항상 하나만)                                 |
| `querySelector('선택자')`    | CSS 선택자 문법으로 요소 선택 (여러 개 중 첫 번째만)          |
| `addEventListener('이벤트')` | 해당 이벤트 발생 시 함수 실행                                 |
| `input.value`                | input, select, textarea의 현재 값 읽기/쓰기                   |
| `addEventListener('input')`  | 값이 바뀔 때마다(실시간) 실행                                 |
| `addEventListener('change')` | 값이 최종적으로 바뀔 때(포커스 아웃, 엔터 등) 실행            |
| `select.remove(index)`       | select 요소의 옵션 중 index번째(0부터 시작)를 삭제            |

---

## 7. 실무 팁 & 주의사항

- input.value로 입력값을 읽고 쓸 수 있음
- 버튼 클릭, 엔터 입력, 실시간 입력 등 다양한 이벤트를 조합해 폼을 자유롭게 제어할 수 있음
- form 태그의 submit 이벤트를 활용하면, 엔터로도 폼 전송이 가능
- select, input, textarea 등 폼 요소는 value 속성으로 값 제어
- **input.value는 문자열만 다룸** (숫자 입력도 문자열로 반환)

---

> 폼 조작은 사용자 입력을 받아 처리하는 웹 개발의 핵심입니다. 다양한 이벤트와 메서드를 조합해, 실시간 반응형 폼을 만들 수 있습니다!
