# 📘 2.11 배열 (Array)

---

# 📘 2.11 배열 (Array)

- 자바스크립트의 **비원시 타입** 중 하나
- **순서가 있는 요소들의 집합** (리스트 형태)
- 배열의 인덱스는 **0부터 시작**

---

## ✅ 배열 생성 방법

### 1. 생성자 함수 방식

```js
let arr1 = new Array(1, 2, 3); // → [1, 2, 3]
let arr2 = new Array(3);       // → [empty × 3]
``` 
---
## 2 리터럴 방식
```js
let arr3 = [1, 2, 3];
let arr4 = [3];

console.log(arr3); // [1, 2, 3]
console.log(arr4); // [3]
```

---
## 다양한 타입을 요소로 담은 배열
```js
let multipleArr = [
  { name: "김요한" },  // 객체
  1,                   // 숫자
  'array',             // 문자열
  function () {        // 함수
    console.log("hello world!");
  },
  null,
  undefined
];

console.log(multipleArr);
```
---
## ✅ 배열 요소 접근 (인덱스 사용)
```js
let array = [1, "Hello", null];

console.log(array[0]); // 1
console.log(array[1]); // Hello
console.log(array[2]); // null

```

---

## ✅ 배열 요소 추가 (인덱스 사용)

서드	설명
push()	맨 뒤에 요소 추가
unshift()	맨 앞에 요소 추가

```js
let fruits = ['apple', 'orange', 'peach'];

fruits.unshift('grape'); // 맨 앞에 추가
// fruits.push('banana'); // 맨 뒤에 추가

console.log(fruits); // ['grape', 'apple', 'orange', 'peach']

```

---
## ✅ 배열 요소 수정
```js
const animal = ['cat', 'dog', 'hamster'];

animal[2] = 'parrot'; // 'hamster' → 'parrot'으로 변경

console.log(animal); // ['cat', 'dog', 'parrot']

```

---
## ✅ 배열 요소 삭제
```js
const colors = ['purple', 'skyblue', 'green', 'yellow', 'red'];

// colors.pop();       // 마지막 요소 삭제 → 'red'
// colors.shift();     // 첫 번째 요소 삭제 → 'purple'
// colors.splice(1, 3); // 1번 인덱스부터 3개 삭제 → ['skyblue', 'green', 'yellow']

colors.pop(); // 'red' 삭제됨

console.log(colors.length); // 남은 요소 개수 출력

```

---
📌 배열 메서드 정리
✅ 기본 메서드
메서드	설명
push()	맨 뒤에 요소 추가
unshift()	맨 앞에 요소 추가
pop()	마지막 요소 제거
shift()	첫 번째 요소 제거
splice(i, n)	i번 인덱스부터 n개 요소 제거
ex) splice(1, 3)

---

📌 요약
작업	메서드 또는 문법	설명
배열 생성	new Array(), []	빈 배열 또는 초기값으로 생성
요소 접근	arr[index]	인덱스를 통해 요소 접근
요소 추가	push(), unshift()	뒤/앞에 요소 추가
요소 수정	arr[index] = newValue	특정 인덱스 값 변경
요소 삭제	pop(), shift(), splice()	뒤/앞/중간 요소 삭제